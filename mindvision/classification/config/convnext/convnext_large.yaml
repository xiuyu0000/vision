# Copyright 2022
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
# The name of the used model, and the prefix name of the checkpoint file.
model_name: "convnext_large"

# The dataset sink mode.
dataset_sink_mode: True

# Context settings.
context:
  mode: 0                       # 0--Graph Mode; 1--Pynative Mode.
  device_target: "GPU"          # Choice of GPU, CPU and Ascend.

# Model settings.
model:
  type: BaseClassifier
  backbone:
    type: convnext_large        # The class of registered convnext network.
    depths: [3, 3, 27, 3]
    dims: [192, 384, 768, 1536]
  neck:
    type: GlobalAvgPooling      # The class of registered pooling layer.
    keep_dims: True
  head:
    type: DenseHead             # The class of registered full connection layer.
    input_channel: 1536
    num_classes: 1000
    has_bias: True
    keep_prob: 1.0

# Learning rate settings.
learning_rate:
  type: "cosine_decay_lr"
  min_lr: 0.0
  max_lr: 0.1
  total_step: epoch_size * steps_per_epoch
  step_per_epoch:
  decay_epoch: warmup_epochs * steps_per_epoch

# Optimizer settings.
optimizer:
  type: 'AdamWeightDecay'
  weight_decay: 0.05

# Loss function settings.
loss:
  type: "SoftmaxCrossEntropyWithLogits"
  sparse: True
  reduction: "mean"

# Training process settings.
train:
  pre_trained: False
  pretrained_model: null
  ckpt_path: "./output"
  epochs: 300
  save_checkpoint_steps: step_per_epoch * 10
  keep_checkpoint_max: 300
  run_distribute: True

# Eval process settings
eval:
  pretrained_model: ""

# Export model file.
export:
  pretrained_model: ""
  batch_size: 256
  image_height: 224
  image_width: 224
  input_channel: 3
  file_name: "ConvNextSmall"    # File name of the model to be exported.
  file_formate: "MINDIR"        # MindSpore currently supports 'AIR', 'ONNX' and 'MINDIR' format for exported model.




